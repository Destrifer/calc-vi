---
import Layout from "../layouts/Layout.astro";
---

<Layout>
	<h1>Динамический расчет неустойки</h1>

	<p>Сумма долга: <strong>2 000 000 руб.</strong></p>
	<p>Общая неустойка: <strong id="penalty">Загрузка...</strong> руб.</p>

	<script>
		let lastPenalty = 0;
		let lastUpdateTime = Date.now();
		let ratePerMs = 0;
		let isAnimating = false;

		async function fetchPenalty() {
			try {
				const response = await fetch("/api/penalty");
				const data = await response.json();

				if (data.penalty > 0) {
					const now = Date.now();
					lastPenalty = parseFloat(data.penalty);
					lastUpdateTime = now;

					// Рассчитываем прирост в рублях за миллисекунду
					ratePerMs = lastPenalty / (1000 * 60 * 60 * 24 * 365); // Примерный прирост (грубая оценка)

					// Сразу показываем правильное значение
					document.getElementById("penalty").innerText = lastPenalty.toFixed(2);

					// Если анимация не запущена — запускаем
					if (!isAnimating) {
						isAnimating = true;
						animatePenalty();
					}
				}
			} catch (error) {
				console.error("Ошибка загрузки данных:", error);
			}
		}

		function animatePenalty() {
			const now = Date.now();
			const elapsedMs = now - lastUpdateTime;

			if (ratePerMs > 0) {
				const newPenalty = lastPenalty + ratePerMs * elapsedMs;
				document.getElementById("penalty").innerText = newPenalty.toFixed(2);
			}

			requestAnimationFrame(animatePenalty);
		}

		// Сначала получаем актуальное значение, потом запускаем анимацию
		fetchPenalty();

		// Обновляем данные с сервера раз в 10 секунд
		setInterval(fetchPenalty, 10000);
	</script>
</Layout>
